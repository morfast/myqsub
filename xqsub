#!/bin/bash

is_num()
{
    [ $# -eq 1 ] || exit 1
    echo $1 | grep -q '^[0-9]*$' 
    if [ $? -eq 0 ]; then
        return 0
    fi
    return 1
}

main_name()
{
    mainname=$(echo $1 | awk -F'.' '{print $1}')
    echo $mainname
}

print_line()
{
    echo -e "========================================================"
    #echo -e "\033[01;33m------------------------------------------------------------- \033[00;37m "
}

print_warn_prefix()
{
    echo -ne "\033[01;31m!!! Warning: \033[0m "
}
    

is_valid_input_file()
{
    valid_suffix="inp xmi com gjf"
    for suf in ${valid_suffix}
    do
        if [ -f $1.${suf} ]; then
            print_line
            echo -e "Input file: " $1.${suf} "\t"
            return 0
        fi
    done

    print_warn_prefix
    echo "could not find input file for job: " $1

    return 1
}

print_usage()
{
    echo "Usage: $0 <jobnames>"
}

check_variables()
{
    if [ -z ${XQSUB_PBS_SCRIPT} ]; then
        echo "Please set XQSUB_PBS_SCRIPT in your .bashrc"
        exit 1
    fi
    
    if [ ! -f $XQSUB_PBS_SCRIPT ]; then
        echo "${XQSUB_PBS_SCRIPT} not found"
        echo "Please check XQSUB_PBS_SCRIPT in your .bashrc"
        exit 1
    fi
    
    if [ -z $XQSUB_DEFAULT_PPN ]; then
        echo "Please set XQSUB_DEFAULT_PPN in your .bashrc"
        exit 1
    fi
    
    is_num $XQSUB_DEFAULT_PPN
    if [[ $? -ne 0 ]]; then
        echo "XQSUB_DEFAULT_PPN should be a number"
        echo "Please check XQSUB_PBS_SCRIPT in your .bashrc"
        exit 1
    fi
    
    if [[ $XQSUB_DEFAULT_PPN -gt ${MAX_PPN} ]]; then
        echo "XQSUB_DEFAULT_PPN should be smaller than ${MAX_PPN}"
        echo "Please check XQSUB_DEFAULT_PPN in your .bashrc"
        exit 1
    fi
}

MAX_PPN=12
check_variables

if [ $# -lt 1 ]; then
	print_usage
    exit 1
fi


PPN=${XQSUB_DEFAULT_PPN}
declare jobnames

for file in $@
do
    is_num ${file}
    if [[ $? -eq 0 ]]; then
        #echo "ppn is set to " ${file} 
        PPN=${file}
    else
        jobname=$(main_name ${file})
        echo ${jobnames} | grep -q ${jobname} 
        if [ $? -eq 0 ]; then
            print_warn_prefix
            echo ${jobname} "have been submitted already"
            continue
        fi

        is_valid_input_file ${jobname} || continue


        jobnames="${jobnames} ${jobname}"
        echo -e "JobName: " ${jobname} 
        if [ ${PPN} -gt ${MAX_PPN} ]; then
            print_warn_prefix
            echo "We can not use so many CPU: ${PPN}, decrease to ${MAX_PPN} instead"
            PPN=${MAX_PPN}
        fi
        echo -e "CPU: " ${PPN}

        qsubcmd="qsub -N $jobname -l nodes=1:ppn=${PPN} ${XQSUB_PBS_SCRIPT}"
        echo "qsub command: " $qsubcmd
        ${qsubcmd} && echo -e "\033[01;32mSubmitted successfully\033[0m"
        print_line


    fi
done

exit 0

